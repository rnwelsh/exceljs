export default Cell;
declare class Cell {
    constructor(row: any, column: any, address: any);
    _row: any;
    _column: any;
    _address: any;
    _value: any;
    style: any;
    _mergeCount: number;
    get worksheet(): any;
    get workbook(): any;
    destroy(): void;
    set numFmt(arg: any);
    get numFmt(): any;
    set font(arg: any);
    get font(): any;
    set alignment(arg: any);
    get alignment(): any;
    set border(arg: any);
    get border(): any;
    set fill(arg: any);
    get fill(): any;
    set protection(arg: any);
    get protection(): any;
    _mergeStyle(rowStyle: any, colStyle: any, style: any): any;
    get address(): any;
    get row(): any;
    get col(): any;
    get $col$row(): string;
    get type(): any;
    get effectiveType(): any;
    toCsvString(): any;
    addMergeRef(): void;
    releaseMergeRef(): void;
    get isMerged(): boolean;
    merge(master: any, ignoreStyle: any): void;
    unmerge(): void;
    isMergedTo(master: any): any;
    get master(): any;
    get isHyperlink(): boolean;
    get hyperlink(): any;
    set value(arg: any);
    get value(): any;
    set note(arg: any);
    get note(): any;
    _comment: any;
    get text(): any;
    get html(): any;
    toString(): any;
    _upgradeToHyperlink(hyperlink: any): void;
    get formula(): any;
    get result(): any;
    get formulaType(): any;
    get fullAddress(): {
        sheetName: any;
        address: any;
        row: any;
        col: any;
    };
    set name(arg: any);
    get name(): any;
    set names(arg: any);
    get names(): any;
    addName(name: any): void;
    removeName(name: any): void;
    removeAllNames(): void;
    get _dataValidations(): any;
    set dataValidation(arg: any);
    get dataValidation(): any;
    set model(arg: any);
    get model(): any;
}
declare namespace Cell {
    export { ValueType as Types };
}
import { ValueType } from "./enums.js";
