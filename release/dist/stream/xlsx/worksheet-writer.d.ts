export default WorksheetWriter;
declare class WorksheetWriter {
    constructor(options: any);
    id: any;
    name: any;
    state: any;
    _rows: any[];
    _columns: any[];
    _keys: {};
    _merges: any[];
    _sheetRelsWriter: SheetRelsWriter;
    _sheetCommentsWriter: SheetCommentsWriter;
    _dimensions: Dimensions;
    _rowZero: number;
    committed: boolean;
    dataValidations: DataValidations;
    _formulae: {};
    _siFormulae: number;
    conditionalFormatting: any[];
    rowBreaks: any[];
    properties: any;
    headerFooter: any;
    pageSetup: any;
    useSharedStrings: any;
    _workbook: any;
    hasComments: boolean;
    _views: any;
    autoFilter: any;
    _media: any[];
    sheetProtection: any;
    startedData: boolean;
    get workbook(): any;
    get stream(): any;
    _stream: any;
    destroy(): void;
    commit(): void;
    get dimensions(): Dimensions;
    get views(): any;
    set columns(arg: any[]);
    get columns(): any[];
    _headerRowCount: any;
    getColumnKey(key: any): any;
    setColumnKey(key: any, value: any): void;
    deleteColumnKey(key: any): void;
    eachColumnKey(f: any): void;
    getColumn(c: any): any;
    get _nextRow(): number;
    eachRow(options: any, iteratee: any): void;
    _commitRow(cRow: any): void;
    get lastRow(): any;
    findRow(rowNumber: any): any;
    getRow(rowNumber: any): any;
    addRow(value: any): Row;
    findCell(r: any, c: any): any;
    getCell(r: any, c: any): any;
    mergeCells(...cells: any[]): void;
    addConditionalFormatting(cf: any): void;
    removeConditionalFormatting(filter: any): void;
    addBackgroundImage(imageId: any): void;
    _background: any;
    getBackgroundImageId(): any;
    protect(password: any, options: any): Promise<any>;
    unprotect(): void;
    _write(text: any): void;
    _writeSheetProperties(xmlBuf: any, properties: any, pageSetup: any): void;
    _writeSheetFormatProperties(xmlBuf: any, properties: any): void;
    _writeOpenWorksheet(): void;
    _writeColumns(): void;
    _writeOpenSheetData(): void;
    _writeRow(row: any): void;
    _writeCloseSheetData(): void;
    _writeMergeCells(): void;
    _writeHyperlinks(): void;
    _writeConditionalFormatting(): void;
    _writeRowBreaks(): void;
    _writeDataValidations(): void;
    _writeSheetProtection(): void;
    _writePageMargins(): void;
    _writePageSetup(): void;
    _writeHeaderFooter(): void;
    _writeAutoFilter(): void;
    _writeBackground(): void;
    _writeLegacyData(): void;
    _writeDimensions(): void;
    _writeCloseWorksheet(): void;
}
import SheetRelsWriter from "./sheet-rels-writer.js";
import SheetCommentsWriter from "./sheet-comments-writer.js";
import Dimensions from "../../doc/range.js";
import DataValidations from "../../doc/data-validations.js";
import Row from "../../doc/row.js";
